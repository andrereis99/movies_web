[{"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\reportWebVitals.js":"1","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\index.js":"2","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\App\\index.js":"3","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\App\\routes.js":"4","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\RouteContent\\index.js":"5","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\ErrorBoundary\\index.js":"6","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Movie\\index.js":"7","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\strings.js":"8","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\index.js":"9","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\reducers\\index.js":"10","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\reducers\\mix.js":"11","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\constants.js":"12","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\history.js":"13","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Home\\index.js":"14","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\Navbar\\index.js":"15","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\index.js":"16","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\index.js":"17","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Movies\\index.js":"18","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\api.js":"19","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\endpoints.js":"20","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\actions\\index.js":"21","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\actions\\mix.js":"22","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\utils.js":"23","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\MovieCard\\index.js":"24","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Person\\index.js":"25"},{"size":362,"mtime":1609798964179,"results":"26","hashOfConfig":"27"},{"size":574,"mtime":1610826723412,"results":"28","hashOfConfig":"27"},{"size":1650,"mtime":1610889835133,"results":"29","hashOfConfig":"27"},{"size":941,"mtime":1610909972535,"results":"30","hashOfConfig":"27"},{"size":329,"mtime":1610804246725,"results":"31","hashOfConfig":"27"},{"size":655,"mtime":1610826526533,"results":"32","hashOfConfig":"27"},{"size":6485,"mtime":1610927910715,"results":"33","hashOfConfig":"27"},{"size":3313,"mtime":1610927006814,"results":"34","hashOfConfig":"27"},{"size":1037,"mtime":1610823386409,"results":"35","hashOfConfig":"27"},{"size":679,"mtime":1610818378789,"results":"36","hashOfConfig":"27"},{"size":331,"mtime":1610845796825,"results":"37","hashOfConfig":"27"},{"size":59,"mtime":1610837365624,"results":"38","hashOfConfig":"27"},{"size":136,"mtime":1610810999527,"results":"39","hashOfConfig":"27"},{"size":1096,"mtime":1610887809853,"results":"40","hashOfConfig":"27"},{"size":4052,"mtime":1610919111483,"results":"41","hashOfConfig":"27"},{"size":157,"mtime":1610896965130,"results":"42","hashOfConfig":"27"},{"size":241,"mtime":1610909991884,"results":"43","hashOfConfig":"27"},{"size":5194,"mtime":1610920337832,"results":"44","hashOfConfig":"27"},{"size":4262,"mtime":1610915872319,"results":"45","hashOfConfig":"27"},{"size":264,"mtime":1610917959170,"results":"46","hashOfConfig":"27"},{"size":22,"mtime":1610823349714,"results":"47","hashOfConfig":"27"},{"size":118,"mtime":1610837367431,"results":"48","hashOfConfig":"27"},{"size":1077,"mtime":1610889565406,"results":"49","hashOfConfig":"27"},{"size":1739,"mtime":1610902315232,"results":"50","hashOfConfig":"27"},{"size":6027,"mtime":1610927451731,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ajmhhy",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\reportWebVitals.js",[],["109","110"],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\index.js",[],["111","112"],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\App\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\App\\routes.js",["113"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { Movies, Movie, Home, Person } from \"../\";\r\n// import { Movie } from \"../Movie\";\r\n  \r\nexport class Routes extends React.Component {\r\n\r\n    render() {\r\n        const { router } = this.props;\r\n        const { location } = router;\r\n\r\n        return (\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/movies/:sorter\" component={Movies} />\r\n              <Route\r\n                exact\r\n                path=\"/movie/:id\"\r\n                component={Movie}\r\n              />\r\n              <Route exact path=\"/person/:id\" component={Person} />\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  router: state.router,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\RouteContent\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\ErrorBoundary\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Movie\\index.js",["114","115"],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\strings.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\reducers\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\reducers\\mix.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\constants.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\history.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Home\\index.js",["116","117","118"],"import React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport { API, Endpoints } from '../../utils/api';\r\nimport logo from '../../assets/images/logo.png';\r\nimport Strings from '../../utils/strings';\r\nimport './styles.scss';\r\n\r\nexport class Home extends Component {\r\n    render () {\r\n        const { movies } = this.props;\r\n\r\n        console.log('movies', movies)\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Helmet>\r\n                    <title>{Strings.movies.header}</title>\r\n                    <meta name=\"description\" content=\"Description of Users\" />\r\n                </Helmet>\r\n                <div className=\"HomeSection1\">\r\n                    <img className=\"S1Image\" src={logo}></img>\r\n                    <span className=\"Section1Text\">\r\n                        {Strings.generic.homeSection1Text}\r\n                    </span>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\Navbar\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Movies\\index.js",["119","120","121","122","123"],"import React, { Component } from 'react'\r\nimport { Helmet } from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport { push } from 'connected-react-router';\r\nimport pptxgen from \"pptxgenjs\";\r\nimport { MovieCard } from '../../components';\r\nimport { toast } from \"../../utils/utils\";\r\nimport { API, Endpoints } from '../../utils/api';\r\nimport Strings from '../../utils/strings';\r\nimport './styles.scss';\r\n\r\nexport class Movies extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmovies: [],\r\n\t\t\tparam: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { param } = this.state;\r\n\t\tconst { match } = this.props;\r\n\r\n\t\tthis.setState({ param: match.params.sorter }, () => {\r\n\t\t\tif (match.params.sorter === 'search') this.searchMovies();\r\n\t\t\telse this.getMovies();\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst { param } = this.state;\r\n\t\tconst { match } = this.props;\r\n\t\t\r\n\t\tif (match.params.sorter === 'search') {\r\n\t\t\tthis.searchMovies();\r\n\t\t} else if (param !== match.params.sorter) {\r\n\t\t\tthis.setState({ param: match.params.sorter }, () => {\r\n\t\t\t\tthis.getMovies();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n    \r\n    getMovies = async () => {\r\n\t\tconst { language, match } = this.props;\r\n\t\tconst { page } = this.state;\r\n\r\n        try {\r\n\t\t\tconst response = await API.get({\r\n\t\t\t\turl: Endpoints.uriMovies(`sorted/${match.params.sorter}/${page || 1}/${language}`),\r\n\t\t\t});\r\n\r\n\t\t\tif (response.status >= 200 && response.status < 400) {\r\n\t\t\t\tconst movies = response.data.results.results\r\n\t\t\t\tconsole.log('results', movies)\r\n\t\t\t\tthis.setState({ movies });\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(Strings.errors.somethingWentWrong);\r\n\t\t}\r\n\t}\r\n\r\n\tsearchMovies = async () => {\r\n\t\tconst { language, search } = this.props;\r\n\t\tconst { page } = this.state;\r\n\r\n\t\tif (search === this.state.search) return;\r\n\r\n\t\tthis.setState({ search }, async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await API.get({\r\n\t\t\t\t\turl: Endpoints.uriMovies(`search/${search}/${page || 1}/${language}`),\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (response.status >= 200 && response.status < 400) {\r\n\t\t\t\t\tconst movies = response.data.results.results\r\n\t\t\t\t\tconsole.log('results', movies)\r\n\t\t\t\t\tthis.setState({ movies });\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\ttoast.error(Strings.errors.somethingWentWrong);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tgetTitle = () => {\r\n\t\tconst { match } = this.props;\r\n\t\t\r\n\t\tif (match.params.sorter === 'popular') return Strings.movies.popular;\r\n\t\telse if (match.params.sorter === 'top_rated') return Strings.movies.top_rated;\r\n\t\telse if (match.params.sorter === 'upcoming') return Strings.movies.upcoming;\r\n\t\telse return Strings.movies.header;\r\n\t}\r\n\r\n\tdownloadPPT = () => {\r\n\t\tconst { movies } = this.state;\r\n\t\tconst pptx = new pptxgen();\r\n\r\n            for(const movie of movies) {\r\n                var slide = pptx.addSlide();\r\n                \r\n                slide.addText(\r\n                    movie.Title || movie.title || movie.original_title || movie.name || movie.original_name,\r\n                    { x:0.25, y:0.25, w:'100%', h:1.5, fontSize:24, color:'0088CC' }\r\n                );\r\n\r\n                {movie.Director && slide.addText(\r\n                   movie.Director,\r\n                   { x:0.25, y:1.5, w:'100%', h:0.5, fontSize:14, color:'878787' }\r\n                )}\r\n\r\n                slide.addText(\r\n                   movie.release_date || movie.first_air_date,\r\n                   { x:1.25, y:1.5, w:'100%', h:0.5, fontSize:14, color:'878787' }\r\n                )\r\n\r\n                slide.addText(\r\n                    movie.overview,\r\n                    { x:0.0, y:2.45, w:'100%', h:3.1, align:'center', justifyContent:'start' , fontSize:16, color:'878787' }\r\n                )\r\n\r\n                const poster = movie.poster_path || movie.backdrop_path\r\n\r\n                {poster && slide.addImage({ path:`https://image.tmdb.org/t/p/original/${poster}`, x:7.5, y:0.25, w:1.6, h:2.2 })}\r\n            }\r\n\r\n            pptx.writeFile(this.getTitle());\r\n\t}\r\n\r\n    render () {\r\n        const { dispatch } = this.props;\r\n        const { movies } = this.state;\r\n\r\n        const title = this.getTitle();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Helmet>\r\n                    <title>{Strings.movies.header}</title>\r\n                    <meta name=\"description\" content=\"Description of Users\" />\r\n                </Helmet>\r\n                {movies && movies.length ?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className='Header'>\r\n\t\t\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName='DownloadButton'\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.downloadPPT()\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<span>{`${Strings.generic.download} ${title}`}</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={`moviesGrid_${movies}`}\r\n\t\t\t\t\t\t\tclassName=\"Movies_container\">\r\n\t\t\t\t\t\t\t\t{movies.map(elem => (\r\n\t\t\t\t\t\t\t\t\t<MovieCard\r\n\t\t\t\t\t\t\t\t\t\tkey={elem.id}\r\n\t\t\t\t\t\t\t\t\t\tmovie={elem}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> :\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Strings.errors.noResultsWereFound}\r\n\t\t\t\t\t</div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tsearch: state?.router?.location?.state?.search,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Movies);\r\n","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\api.js",["124","125","126","127"],"/* eslint-disable no-restricted-globals */\r\nimport axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\nimport EndpointsList from './endpoints';\r\nimport { store } from '../store';\r\nimport { push } from 'connected-react-router';\r\nimport Strings from './strings';\r\n\r\nconst isBetween = (v, a, b) => v >= a && v <= b;\r\n\r\nexport default class ApiSauce {\r\n    static Endpoints = EndpointsList;\r\n\r\n    constructor(config = {}) {\r\n        const { headers, ...axiosConfig } = config || {};\r\n\r\n        this.headers = headers\r\n        this.instance = axios.create(axiosConfig)\r\n        this.stack = [];\r\n    }\r\n\r\n    defaultHeaders = () => {\r\n        const { token } = store.getState();\r\n        const lang = Strings.getLanguage();\r\n\t\tconst headers = {\r\n\t\t\t'Accept-Language': lang,\r\n\t\t};\r\n\r\n\t\tif (token) headers.Authorization = `Bearer ${token}`;\r\n\r\n\t\treturn headers;\r\n\t};\r\n\r\n    addToStack = (url) => {\r\n\t\tthis.stack.push(url);\r\n\t};\r\n\r\n\tremoveFromStack = (url) => {\r\n\t\tconst index = this.stack.indexOf(url);\r\n\t\tif (index !== -1) this.stack.splice(index, 1);\r\n\t\treturn index !== -1;\r\n\t};\r\n\r\n\trequestWithBody = ({ method = '', url = '', data = null, params = {}, axiosConfig = {}, ...args }) => {\r\n\t\treturn this.request(Object.assign({ url, method, data, params }, args, axiosConfig));\r\n\t};\r\n\r\n    /**\r\n\t * Generic request for any method\r\n\t * @param {*} axiosConfig\r\n\t */\r\n\trequest = (axiosConfig) => {\r\n\t\tconst { ...config } = axiosConfig;\r\n\r\n\t\tconfig.headers = {\r\n\t\t\t...this.headers,\r\n\t\t\t...this.defaultHeaders(),\r\n\t\t\t...config.headers,\r\n        };\r\n\r\n\t\tconsole.log('#DEBUG-API', config.method, config.url);\r\n\r\n\t\t// console.log('stack : ', this.stack);\r\n\r\n\t\t// if (this.stack.find((r) => r === config.url)) {\r\n\t\t// \t// Already processing this uri, ignores duplicated\r\n\t\t// \tconsole.log('DUPLICATE_REQUEST');\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\tthis.addToStack(config.url); // Add to requests stack\r\n\r\n\t\t// const startDate = new Date().valueOf();\r\n\t\t// const chain = this.chain(startDate, axiosConfig, config.headers);\r\n\r\n\t\treturn this.instance.request(config); //.then(chain).catch(chain);\r\n\t};\r\n\r\n    chain = (startDate, axiosConfig, headers) => {\r\n\t\tconst { handleError = false, ...config } = axiosConfig;\r\n\t\treturn async (axiosResult) => {\r\n\t\t\tconst response = await this.convertResponse(startDate, axiosResult);\r\n\t\t\tresponse.sentHeaders = headers;\r\n\r\n\t\t\tthis.removeFromStack(config.url); // Remove from stack\r\n\t\t\tif (response.originalError && !handleError) {\r\n\t\t\t\t// management of error\r\n\t\t\t\tthis.handleError(response);\r\n\t\t\t}\r\n\r\n\t\t\t/*\r\n\t\t\t * Sentry.addBreadcrumb({\r\n\t\t\t * \tcategory: 'API Call',\r\n\t\t\t * \tdata: response,\r\n\t\t\t * \tmessage: config.url,\r\n\t\t\t * \tlevel: Sentry.Severity.Info,\r\n\t\t\t * });\r\n\t\t\t */\r\n\r\n\t\t\t// Custom Error Handling\r\n\t\t\tif (response.data && response.data.error) {\r\n\t\t\t\t// something here\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t};\r\n    };\r\n    \r\n    convertResponse = async (startedAt, axiosResult) => {\r\n\t\t// console.log('----- axiosResult ------');\r\n\t\t// console.log(JSON.stringify(axiosResult));\r\n\r\n\t\tconst end = new Date().valueOf();\r\n\t\tconst duration = end - startedAt;\r\n\t\tconst isError = axiosResult instanceof Error || axios.isCancel(axiosResult);\r\n\t\tconst axiosResponse = axiosResult;\r\n\t\tconst axiosError = axiosResult;\r\n\t\tconst response = isError ? axiosError.response : axiosResponse;\r\n\t\tconst status = (response && response.status) || 0;\r\n\t\tconst originalError = isError ? axiosError : null;\r\n\t\tconst ok = isBetween(status, 200, 299);\r\n\t\tconst config = axiosResult.config || null;\r\n\t\tconst headers = (response && response.headers) || null;\r\n\t\tconst data = (response && response.data) || null;\r\n\r\n\t\tconst transformedResponse = {\r\n\t\t\tduration,\r\n\t\t\toriginalError,\r\n\t\t\tok,\r\n\t\t\theaders,\r\n\t\t\tconfig,\r\n\t\t\tdata,\r\n\t\t\tstatus,\r\n\t\t\tsentHeaders: null,\r\n\t\t};\r\n\r\n\t\tif (ok && data && data.error) {\r\n\t\t\ttransformedResponse.ok = false;\r\n\t\t}\r\n\r\n\t\t// apisauce by infinitered has more code in this step\r\n\r\n\t\treturn transformedResponse;\r\n\t};\r\n\r\n\tget = (args = {}) => {\r\n\t\treturn this.request({ method: 'get', ...args });\r\n\t};\r\n\r\n\tpost = (args = {}) => {\r\n\t\treturn this.requestWithBody({ method: 'post', ...args });\r\n\t};\r\n}\r\n\r\nexport const Endpoints = EndpointsList;\r\n\r\nexport const API = new ApiSauce();\r\n\r\nexport const GET = API.get;\r\nexport const POST = API.post;","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\endpoints.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\actions\\index.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\store\\actions\\mix.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\utils\\utils.js",[],"C:\\Users\\André Reis\\Desktop\\movies_web\\src\\components\\MovieCard\\index.js",["128","129","130"],"/**\r\n *\r\n * MovieCard\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport { Input, Button } from 'antd';\r\nimport logo from '../../assets/images/logo.png';\r\nimport Strings from '../../utils/strings';\r\nimport './styles.scss';\r\n\r\nexport class MovieCard extends React.PureComponent {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {};\r\n    }\r\n\r\n    getVoreClass = (vote) => {\r\n        if (vote >= 7) return 'good';\r\n        if (vote >= 5) return 'average';\r\n        else return 'bad';\r\n    }\r\n\r\n    render() {\r\n        const { movie, dispatch } = this.props;\r\n        const title = movie?.Title || movie?.title || movie?.original_title || movie?.name || movie?.original_name;\r\n        const voteClass = this.getVoreClass(movie.vote_average);\r\n\r\n        return (\r\n            <div className=\"MovieCard\" onClick={() => dispatch(push(`/movie/${movie.id}`))}>\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/original/${movie?.poster_path || movie?.backdrop_path}`}\r\n                    alt={title}/>\r\n                <div className=\"MovieCard_info\">\r\n                    <h3>{title}</h3>\r\n                    <span className={voteClass}>\r\n                        {movie.vote_average}\r\n                        <div className=\"separator\"></div>\r\n                    </span>\r\n                </div>\r\n                <div className=\"MovieCard_overview\">\r\n                    <h3>{`${Strings.movies.overview}: `}</h3>\r\n                    <p>{movie.overview}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(mapStateToProps)(MovieCard);\r\n","C:\\Users\\André Reis\\Desktop\\movies_web\\src\\screens\\Person\\index.js",["131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":11,"column":17,"nodeType":"141","messageId":"142","endLine":11,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":89,"column":49,"nodeType":"145","endLine":90,"endColumn":120},{"ruleId":"143","severity":1,"message":"144","line":114,"column":45,"nodeType":"145","endLine":115,"endColumn":116},{"ruleId":"139","severity":1,"message":"146","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":13},{"ruleId":"139","severity":1,"message":"147","line":4,"column":15,"nodeType":"141","messageId":"142","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":22,"column":21,"nodeType":"145","endLine":22,"endColumn":57},{"ruleId":"139","severity":1,"message":"148","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":14},{"ruleId":"139","severity":1,"message":"149","line":24,"column":11,"nodeType":"141","messageId":"142","endLine":24,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":109,"column":17,"nodeType":"152","messageId":"153","endLine":112,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":126,"column":17,"nodeType":"152","messageId":"153","endLine":126,"endColumn":130},{"ruleId":"139","severity":1,"message":"154","line":133,"column":17,"nodeType":"141","messageId":"142","endLine":133,"endColumn":25},{"ruleId":"139","severity":1,"message":"155","line":2,"column":17,"nodeType":"141","messageId":"142","endLine":2,"endColumn":30},{"ruleId":"139","severity":1,"message":"156","line":2,"column":32,"nodeType":"141","messageId":"142","endLine":2,"endColumn":45},{"ruleId":"139","severity":1,"message":"157","line":2,"column":47,"nodeType":"141","messageId":"142","endLine":2,"endColumn":57},{"ruleId":"139","severity":1,"message":"148","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":14},{"ruleId":"139","severity":1,"message":"158","line":10,"column":10,"nodeType":"141","messageId":"142","endLine":10,"endColumn":15},{"ruleId":"139","severity":1,"message":"159","line":10,"column":17,"nodeType":"141","messageId":"142","endLine":10,"endColumn":23},{"ruleId":"139","severity":1,"message":"160","line":11,"column":8,"nodeType":"141","messageId":"142","endLine":11,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":79,"column":49,"nodeType":"145","endLine":80,"endColumn":142},{"ruleId":"143","severity":1,"message":"144","line":104,"column":49,"nodeType":"145","endLine":105,"endColumn":142},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'API' is defined but never used.","'Endpoints' is defined but never used.","'push' is defined but never used.","'param' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'dispatch' is assigned a value but never used.","'AxiosInstance' is defined but never used.","'AxiosResponse' is defined but never used.","'AxiosError' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]